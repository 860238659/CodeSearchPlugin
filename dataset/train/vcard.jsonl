{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addFormattedName ( fn : String ) {  content . put ( FN: , fn ) NL }","func_name":"addFormattedName","docstring":"/**\n     * The Function is addFormattedName\n     *\n     * @param fn of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addName ( name : VCardName ) {  content . put ( N: , name . toString ( ) ) NL }","func_name":"addName","docstring":"/**\n     * The Function is addName\n     *\n     * @param name of VCardName\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addPhotograph ( path : String ) {   let img = MediaUtility . encodeImageToBase64 ( path ) NL content . put ( PHOTO;ENCODING=BASE64;TYPE=JPEG: , img ) NL }","func_name":"addPhotograph","docstring":"/**\n     * The Function is addPhotograph\n     *\n     * @param path of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addBirthdate ( birthDate : Time ) {   let dateTime = birthDate . toString ( yyyyMMdd ) NL content . put ( BDAY: , dateTime ) NL }","func_name":"addBirthdate","docstring":"/**\n     * The Function is addBirthdate\n     *\n     * @param birthDate of Time\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addAddress ( address : VCardAddress ) {  content . put ( ADR; + address . getType ( ) + : , address . toString ( ) ) NL }","func_name":"addAddress","docstring":"/**\n     * The Function is addAddress\n     *\n     * @param address of VCardAddress\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addTelephoneNumber ( telType : TelephoneType , number : String ) {  content . put ( TEL; + telType . toString ( ) + : , number ) NL }","func_name":"addTelephoneNumber","docstring":"/**\n     * The Function is addTelephoneNumber\n     *\n     * @param telType of TelephoneType\n     * @param number of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addEmail ( mailType : EmailType , email : String ) {  content . put ( EMAIL; + mailType . toString ( ) + : , email ) NL }","func_name":"addEmail","docstring":"/**\n     * The Function is addEmail\n     *\n     * @param mailType of EmailType\n     * @param email of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addMailer ( mailer : String ) {  content . put ( MAILER: , mailer ) NL }","func_name":"addMailer","docstring":"/**\n     * The Function is addMailer\n     *\n     * @param mailer of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addTimeZone ( timezone : String ) {  content . put ( TZ: , timezone ) NL }","func_name":"addTimeZone","docstring":"/**\n     * The Function is addTimeZone\n     *\n     * @param timezone of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addGeographicPosition ( longitude : Float64 , latitude : Float64 ) {  content . put ( GEO: , longitude . toString ( ) + , + latitude . toString ( ) ) NL }","func_name":"addGeographicPosition","docstring":"/**\n     * The Function is addGeographicPosition\n     *\n     * @param longitude of Float64\n     * @param latitude of Float64\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addOrganizationalTitle ( title : String ) {  content . put ( TITLE: , title ) NL }","func_name":"addOrganizationalTitle","docstring":"/**\n     * The Function is addOrganizationalTitle\n     *\n     * @param title of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addOrganizationalRole ( role : String ) {  content . put ( ROLE: , role ) NL }","func_name":"addOrganizationalRole","docstring":"/**\n     * The Function is addOrganizationalRole\n     *\n     * @param role of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addOrganizationalLogo ( path : String ) {   let img = MediaUtility . encodeImageToBase64 ( path ) NL content . put ( LOGO;ENCODING=BASE64;TYPE=JPEG: , img ) NL }","func_name":"addOrganizationalLogo","docstring":"/**\n     * The Function is addOrganizationalLogo\n     *\n     * @param path of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func addOrganizationalName ( name : String ) {  content . put ( ORG: , name ) NL }","func_name":"addOrganizationalName","docstring":"/**\n     * The Function is addOrganizationalName\n     *\n     * @param name of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getFormattedName ( ) {  content . get ( FN: ) . getOrThrow ( ) NL }","func_name":"getFormattedName","docstring":"/**\n     * The Function is getFormattedName\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getName ( ) : VCardName {   let fn = content . get ( N: ) . getOrThrow ( ) NL  let fns = fn . split ( ; ) NL try {  VCardName ( familyName : fns [ 0 ] , givenName : fns [ 1 ] , setitionalNames : fns [ 2 ] , namePrefix : fns [ 3 ] , nameSuffix : fns [ 4 ] ) NL } catch ( ex : IndexOutOfBoundsException ) {  throw Exception ( Name Format Error : IndexOutOfBoundsException ) NL } NL }","func_name":"getName","docstring":"/**\n     * The Function is getName\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getPhotograph ( path ! : String = image.jpg ) {  MediaUtility . decodeBase64ToImage ( content . get ( PHOTO;ENCODING=BASE64;TYPE=JPEG: ) . getOrThrow ( ) , path : path ) NL }","func_name":"getPhotograph","docstring":"/**\n     * The Function is getPhotograph\n     *\n     * @param path! of String = \"image.jpg\"\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getBirthdate ( ) {   let dateStr = content . get ( BDAY: ) . getOrThrow ( ) NL Time . parse ( dateStr , yyyyMMdd ) NL }","func_name":"getBirthdate","docstring":"/**\n     * The Function is getBirthdate\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getAddress ( addressType : DeliveryType ) : VCardAddress {   let addr = content . get ( ADR; + addressType . toString ( ) + : ) . getOrThrow ( ) NL  let addrs = addr . split ( ; ) NL try {  VCardAddress ( addressType , postOfficeAddress : addrs [ 0 ] , extendedAddress : addrs [ 1 ] , street : addrs [ 2 ] , locality : addrs [ 3 ] , region : addrs [ 4 ] , postalCode : addrs [ 5 ] , country : addrs [ 6 ] ) NL } catch ( ex : IndexOutOfBoundsException ) {  throw Exception ( Address Format Error ) NL } NL }","func_name":"getAddress","docstring":"/**\n     * The Function is getAddress\n     *\n     * @param addressType of DeliveryType\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getTelephoneNumber ( telType : TelephoneType ) {  content . get ( TEL; + telType . toString ( ) + : ) . getOrThrow ( ) NL }","func_name":"getTelephoneNumber","docstring":"/**\n     * The Function is getTelephoneNumber\n     *\n     * @param telType of TelephoneType\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getEmail ( emailType : EmailType ) {  content . get ( EMAIL; + emailType . toString ( ) + : ) . getOrThrow ( ) NL }","func_name":"getEmail","docstring":"/**\n     * The Function is getEmail\n     *\n     * @param emailType of EmailType\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getMailer ( ) {  content . get ( MAILER: ) . getOrThrow ( ) NL }","func_name":"getMailer","docstring":"/**\n     * The Function is getMailer\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getTimeZone ( ) {  content . get ( TZ: ) . getOrThrow ( ) NL }","func_name":"getTimeZone","docstring":"/**\n     * The Function is getTimeZone\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getGeographicPosition ( ) {  content . get ( GEO: ) . getOrThrow ( ) NL }","func_name":"getGeographicPosition","docstring":"/**\n     * The Function is getGeographicPosition\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getOrganizationTitle ( ) {  content . get ( TITLE: ) . getOrThrow ( ) NL }","func_name":"getOrganizationTitle","docstring":"/**\n     * The Function is getOrganizationTitle\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getOrganizationRole ( ) {  content . get ( ROLE: ) . getOrThrow ( ) NL }","func_name":"getOrganizationRole","docstring":"/**\n     * The Function is getOrganizationRole\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getOrganizationLogo ( path ! : String = image.jpg ) {  MediaUtility . decodeBase64ToImage ( content . get ( LOGO;ENCODING=BASE64;TYPE=JPEG: ) . getOrThrow ( ) , path : path ) NL }","func_name":"getOrganizationLogo","docstring":"/**\n     * The Function is getOrganizationLogo\n     *\n     * @param path! of String = \"image.jpg\"\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func getOrganizationName ( ) {  content . get ( ORG: ) . getOrThrow ( ) NL }","func_name":"getOrganizationName","docstring":"/**\n     * The Function is getOrganizationName\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func clear ( ) {  content . clear ( ) NL }","func_name":"clear","docstring":"/**\n     * The Function is clear\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func saveToVCF ( path : String ) {   let begin = BEGIN:VCARD NL  let version = VERSION:2.1 NL  let end = END:VCARD NL  let stream = File ( path , OpenOption . Open ( true , true ) ) NL if ( stream . canRead ( ) ) {  if ( stream . canWrite ( ) ) {   var sb = StringBuilder ( ) NL for ( ( k , v ) in content ) {  sb . append ( k + v + \\r\\n ) NL } NL  let sbString = begin + \\r\\n + version + \\r\\n + sb . toString ( ) + \\r\\n + end NL  let sbBytes = sbString . toUtf8Array ( ) NL stream . write ( sbBytes ) NL stream . flush ( ) NL stream . close ( ) NL } else {  throw WriteException ( Can not write to vcf file ) NL } NL } else {  throw ReadException ( Can not read vcf file ) NL } NL }","func_name":"saveToVCF","docstring":"/**\n     * The Function is saveToVCF\n     *\n     * @param path of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard.cj","path":"vcard/src/vcard.cj","code_tokens":"public func readFromVCF ( path : String ) {   let stream = File ( path , OpenOption . Open ( true , false ) ) NL if ( stream . canRead ( ) ) {   let temp : Array < Byte > NL try {  try {  temp = File . readFrom ( path ) NL } catch ( e : IllegalArgumentException ) {  throw IllegalArgumentException ( the file path contains a null character ) NL } NL } catch ( e : FSException ) {  throw ReadException ( The file path is empty & the file is unreadable & the file failed to read ) NL } NL  let temp1 = unsafe {  String . fromUtf8Unchecked ( temp ) NL } NL  let items = temp1 . split ( \\r\\n , removeEmpty : true ) NL content . clear ( ) NL for ( item in items ) {   let keyValue = item . split ( : , 2 ) NL content . put ( keyValue [ 0 ] + : , keyValue [ 1 ] ) NL } NL stream . flush ( ) NL stream . close ( ) NL } else {  throw ReadException ( Can not read vcf file ) NL } NL }","func_name":"readFromVCF","docstring":"/**\n     * The Function is readFromVCF\n     *\n     * @param path of String\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"telephone_type.cj","path":"vcard/src/telephone_type.cj","code_tokens":"public override func toString ( ) {  match ( this ) { case PREF => PREF NL case WORK => WORK NL case HOME => HOME NL case VOICE => VOICE NL case FAX => FAX NL case MSG => MSG NL case CELL => CELL NL case PAGER => PAGER NL case BBS => BBS NL case MODEM => MODEM NL case CAR => CAR NL case ISDN => ISDN NL case VIDEO => VIDEO NL } NL }","func_name":"toString","docstring":"/**\n     * The Function is toString\n     *\n     * \n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public override func toString ( ) {  familyName + ; + givenName + ; + setitionalNames + ; + namePrefix + ; + nameSuffix NL }","func_name":"toString","docstring":"/**\n     * The Function is toString\n     *\n     * \n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func setFamilyName ( familyName : String ) {  this . familyName = familyName NL }","func_name":"setFamilyName","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func setGivenName ( givenName : String ) {  this . givenName = givenName NL }","func_name":"setGivenName","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func setSetitionalNames ( setitionalNames : String ) {  this . setitionalNames = setitionalNames NL }","func_name":"setSetitionalNames","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func setNamePrefix ( namePrefix : String ) {  this . namePrefix = namePrefix NL }","func_name":"setNamePrefix","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func setNameSuffix ( nameSuffix : String ) {  this . nameSuffix = nameSuffix NL }","func_name":"setNameSuffix","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func getFamilyName ( ) {  this . familyName NL }","func_name":"getFamilyName","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func getGivenName ( ) {  this . givenName NL }","func_name":"getGivenName","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func getSetitionalNames ( ) {  this . setitionalNames NL }","func_name":"getSetitionalNames","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func getNamePrefix ( ) {  this . namePrefix NL }","func_name":"getNamePrefix","docstring":""}
{"repo":"vcard","file":"vcard_name.cj","path":"vcard/src/vcard_name.cj","code_tokens":"public func getNameSuffix ( ) {  this . nameSuffix NL }","func_name":"getNameSuffix","docstring":""}
{"repo":"vcard","file":"email_type.cj","path":"vcard/src/email_type.cj","code_tokens":"public override func toString ( ) {  match ( this ) { case AOL => AOL NL case AppleLink => AppleLink NL case ATTMail => ATTMail NL case CIS => CIS NL case EWorld => eWorld NL case INTERNET => INTERNET NL case IBMMail => IBMMail NL case MCIMail => MCIMail NL case POWERSHARE => POWERSHARE NL case PRODIGY => PRODIGY NL case TLX => TLX NL case X400 => X400 NL } NL }","func_name":"toString","docstring":"/**\n     * The Function is toString\n     *\n     * \n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"address_type.cj","path":"vcard/src/address_type.cj","code_tokens":"public override func toString ( ) {  match ( this ) { case DOM => DOM NL case INTL => INTL NL case POSTAL => POSTAL NL case PARCEL => PARCEL NL case HOME => HOME NL case WORK => WORK NL } NL }","func_name":"toString","docstring":"/**\n     * The Function is toString\n     *\n     * \n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"media_utility.cj","path":"vcard/src/media_utility.cj","code_tokens":"static public func encodeImageToBase64 ( path : String ) : String {   let stream = File ( path , OpenOption . Open ( true , true ) ) NL  let bytes : Array < Byte > NL if ( stream . canRead ( ) ) {  bytes = File . readFrom ( path ) NL stream . flush ( ) NL stream . close ( ) NL return toBase64String ( bytes ) NL } else {  throw Exception ( Failed to Read the image ) NL } NL }","func_name":"encodeImageToBase64","docstring":"/**\n     * The Function is encodeImageToBase64\n     *\n     * @param path of String\n     * \n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"media_utility.cj","path":"vcard/src/media_utility.cj","code_tokens":"static public func decodeBase64ToImage ( base64 : String , path ! : String = image.jpg ) {   let bytes = fromBase64String ( base64 ) . getOrThrow ( ) NL  let pathLower = path . toAsciiLower ( ) NL if ( path . endsWith ( .jpg ) || path . endsWith ( .png ) || path . endsWith ( .jpeg ) ) {   let stream = File ( path , OpenOption . CreateOrTruncate ( true ) ) NL if ( stream . canWrite ( ) ) {  stream . write ( bytes ) NL stream . flush ( ) NL stream . close ( ) NL } else {  throw Exception ( Failed to save the image ) NL } NL } else {  throw Exception ( The image format is incorrect ) NL } NL }","func_name":"decodeBase64ToImage","docstring":"/**\n     * The Function is decodeBase64ToImage\n     *\n     * @param path of String\n     *\n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getType ( ) {  addressType . toString ( ) NL }","func_name":"getType","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public override func toString ( ) {  postOfficeAddress + ; + extendedAddress + ; + street + ; + locality + ; + region + ; + postalCode + ; + country NL }","func_name":"toString","docstring":"/**\n     * The Function is toString\n     *\n     * \n     * @since 0.35.6\n     */"}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setAddressType ( addressType : DeliveryType ) {  this . addressType = addressType NL }","func_name":"setAddressType","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setPostOfficeAddress ( postOfficeAddress : String ) {  this . postOfficeAddress = postOfficeAddress NL }","func_name":"setPostOfficeAddress","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setExtendedAddress ( extendedAddress : String ) {  this . extendedAddress = extendedAddress NL }","func_name":"setExtendedAddress","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setStreet ( street : String ) {  this . street = street NL }","func_name":"setStreet","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setLocality ( locality : String ) {  this . locality = locality NL }","func_name":"setLocality","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setRegion ( region : String ) {  this . region = region NL }","func_name":"setRegion","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setPostalCode ( postalCode : String ) {  this . postalCode = postalCode NL }","func_name":"setPostalCode","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func setCountry ( country : String ) {  this . country = country NL }","func_name":"setCountry","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getAddressType ( ) {  addressType NL }","func_name":"getAddressType","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getPostOfficeAddress ( ) {  postOfficeAddress NL }","func_name":"getPostOfficeAddress","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getExtendedAddress ( ) {  extendedAddress NL }","func_name":"getExtendedAddress","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getStreet ( ) {  street NL }","func_name":"getStreet","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getLocality ( ) {  locality NL }","func_name":"getLocality","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getRegion ( ) {  region NL }","func_name":"getRegion","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getPostalCode ( ) {  postalCode NL }","func_name":"getPostalCode","docstring":""}
{"repo":"vcard","file":"vcard_address.cj","path":"vcard/src/vcard_address.cj","code_tokens":"public func getCountry ( ) {  country NL }","func_name":"getCountry","docstring":""}
